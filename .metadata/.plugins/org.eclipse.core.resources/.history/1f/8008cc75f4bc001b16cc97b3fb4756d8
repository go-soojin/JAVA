package com.kopo.project0521;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Locale;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;


@Controller
public class HomeController {
	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String home(Locale locale, Model model) {
		return "main";
	}
	
	@RequestMapping(value = "/list", method = RequestMethod.GET)
	public String listMethod(Locale locale, Model model) {
		DBCommon<Student> db = new DBCommon<Student>("c:/tomcat_sj/0521.db", "student");
		ArrayList<Student> student = db.selectArrayList(new Student());
		String htmlString="";
		for(int i = 0; i < student.size(); i++) {
			htmlString=htmlString+"<tr>";
			htmlString=htmlString+"<td>";
			htmlString= htmlString + student.get(i).idx;
			htmlString=htmlString+"</td>";
			htmlString=htmlString+"<td>";
			htmlString= htmlString + student.get(i).name;
			htmlString=htmlString+"</td>";
			htmlString=htmlString+"<td>";
			htmlString= htmlString + student.get(i).middlescore;
			htmlString=htmlString+"</td>";
			htmlString=htmlString+"<td>";
			htmlString= htmlString + student.get(i).finalscore;
			htmlString=htmlString+"</td>";
			htmlString=htmlString+"<td>";
			htmlString = htmlString + "<td>";
			htmlString = htmlString + student.get(i).created;
			htmlString = htmlString + "</td>";
			htmlString= htmlString + "<a href = 'update?idx="+ student.get(i).idx + "'>수정하기</a>";
			htmlString=htmlString+"</td>";
			htmlString=htmlString+"<td>";
			htmlString= htmlString + "<a href = 'delete?idx="+ student.get(i).idx + "'>삭제하기</a>";
			htmlString=htmlString+"</td>";
			htmlString=htmlString+"</tr>";
		}
		model.addAttribute("list", htmlString);
		return "list";
	}
	
	@RequestMapping(value = "/insert", method = RequestMethod.GET)
	public String insertMethod(Locale locale, Model model) {
		return "insert";
	}
	
	@RequestMapping(value = "/insert_action", method = RequestMethod.GET)
	public String insertAction(Locale locale, Model model
			, @RequestParam("student_name") String sName
			, @RequestParam("middlescore") String mScore 
			, @RequestParam("finalscore") String fScore){
		int midScore = Integer.parseInt(mScore);
		int finScore = Integer.parseInt(fScore);
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String now = sdf.format(Calendar.getInstance().getTime());

//		DBCommon<Student> db = new DBCommon<Student>("c:/tomcat_sj/0521.db", "student");
//		db.insertData(new Student(sName, midScore, finScore,now));
		UserDB db = new UserDB();
		db.insertData();
		model.addAttribute("m1", "데이터가 입력되었습니다.");
		return "message";
	}

	@RequestMapping(value = "/create_table", method = RequestMethod.GET)
	public String createTable(Locale locale, Model model) {
//		DBCommon<Student> db = new DBCommon<Student>("c:/tomcat_sj/0521.db", "student");
//		db.createTable(new Student());
		UserDB db = new UserDB();
		db.createTable();
		model.addAttribute("m1", "테이블이 생성되었습니다.");
		return "message";
	}
	
	@RequestMapping(value = "/update", method = RequestMethod.GET)
	public String updateMethod(Locale locale, Model model, @RequestParam("idx") int idx) {
		DBCommon<Student> db = new DBCommon<Student>("c:/tomcat_sj/0521.db", "student");
		Student selectStudent = db.detailsData(new Student(), idx);
		
		if (selectStudent != null) {
			model.addAttribute("idx", selectStudent.idx);
			model.addAttribute("studentName", selectStudent.name);
			model.addAttribute("middleScore", selectStudent.middlescore);
			model.addAttribute("finalScore", selectStudent.finalscore);
		}
		return "update";
	}

	@RequestMapping(value = "/update_action", method = RequestMethod.GET)
	public String updateAction(Locale locale, Model model
			, @RequestParam("idx") int idx
			, @RequestParam("student_name") String sName
			, @RequestParam("middle_score") String mScore
			, @RequestParam("final_score") String fScore) {
		int midScore = Integer.parseInt(mScore);
		int finScore = Integer.parseInt(fScore);
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String now = sdf.format(Calendar.getInstance().getTime());
		
		DBCommon<Student> db = new DBCommon<Student>("c:/tomcat_sj/0521.db", "student");
		db.updateData(new Student(idx, sName, midScore, finScore,now));
		model.addAttribute("m1", "데이터가 수정되었습니다.");
		return "message";
	}
	
	@RequestMapping(value = "/delete", method = RequestMethod.GET)
	public String deleteTable(Locale locale, Model model, @RequestParam("idx") int idx) {
		DBCommon<Student> db = new DBCommon<Student>("c:/tomcat_sj/0521.db", "student");
		Student selectStudent = db.detailsData(new Student(), idx);
		
		if (selectStudent != null) {
			db.deleteData(selectStudent);
		}
		model.addAttribute("m1", "데이터가 삭제되었습니다.");
		return "message";
	}
	
}
